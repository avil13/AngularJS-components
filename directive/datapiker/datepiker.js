// Generated by CoffeeScript 1.9.1
APP.directive('datePiker', [
  function() {
    return {
      restrict: 'EA',
      templateUrl: 'datepiker.html',
      scope: {
        date: '=',
        firstDay: '@',
        max: '=',
        min: '='
      },
      link: function(scope, iElement, iAttrs) {
        var getDaysOfWeek, getWeeks;
        scope.formatDate = function(date) {
          if (!date) {
            return false;
          }
          date.setHours(0);
          date.setMinutes(0);
          date.setSeconds(0);
          date.setMilliseconds(1);
          return date;
        };
        scope.currDate = scope.formatDate(angular.copy(scope.date));
        if (scope.firstDay === void 0) {
          scope.firstDay = 1;
        } else {
          scope.firstDay = parseInt(scope.firstDay, 10);
        }
        scope.typeView = false;
        getWeeks = function() {
          var date, i, startMonth, startYear, week, weeks;
          date = new Date(scope.currDate.getTime());
          startMonth = date.getMonth();
          startYear = date.getFullYear();
          date.setDate(1);
          date.setHours(0);
          date.setMinutes(0);
          date.setSeconds(0);
          date.setMilliseconds(1);
          if (date.getDay() === 0) {
            date.setDate(scope.firstDay - 6);
          } else {
            date.setDate(date.getDate() - (date.getDay() - scope.firstDay));
          }
          if (date.getDate() === 1) {
            date.setDate(scope.firstDay - 7);
          }
          weeks = [];
          week = [];
          while (weeks.length < 6) {
            if (date.getFullYear() === startYear && date.getMonth() > startMonth) {
              break;
            }
            week = [];
            i = 0;
            while (i < 7) {
              i++;
              week.push({
                d: new Date(date)
              });
              date.setDate(date.getDate() + 1);
            }
            weeks.push(week);
          }
          return weeks;
        };
        getDaysOfWeek = function(date) {
          var days, i;
          date = new Date(date || new Date());
          date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
          date.setDate(date.getDate() - (date.getDay() - scope.firstDay));
          days = [];
          i = 0;
          while (i < 7) {
            i++;
            days.push(new Date(date));
            date.setDate(date.getDate() + 1);
          }
          return days;
        };
        scope.next = function(delta) {
          var month;
          delta = delta || 1;
          month = scope.currDate.getMonth() + delta;
          scope.currDate.setMonth(month);
          return scope.weeks = getWeeks();
        };
        scope.prev = function() {
          return scope.next(-1);
        };
        scope.chekDate = function(day, type) {
          var cd, d, klass, max, min, muted;
          max = false;
          min = false;
          klass = [];
          muted = void 0;
          cd = scope.currDate;
          d = day.d;
          if (scope.max) {
            max = d.getFullYear() > scope.max.getFullYear() || d.getMonth() > scope.max.getMonth() && d.getFullYear() >= scope.max.getFullYear() || d.getDate() > scope.max.getDate() && d.getMonth() >= scope.max.getMonth() && d.getFullYear() >= scope.max.getFullYear();
          }
          if (scope.min) {
            min = d.getFullYear() < scope.max.getFullYear() || d.getMonth() < scope.min.getMonth() && d.getFullYear() <= scope.min.getFullYear() || d.getDate() < scope.min.getDate() && d.getMonth() <= scope.min.getMonth() && d.getFullYear() <= scope.min.getFullYear();
            muted = min || max || d.getMonth() !== cd.getMonth();
          }
          if (type) {
            return muted;
          }
          if (muted) {
            klass.push('text-muted');
          }
          if (d.getDate() === cd.getDate() && d.getMonth() === cd.getMonth() && d.getFullYear() === cd.getFullYear()) {
            klass.push('bg-primary');
          }
          return klass.join(' ');
        };
        scope.setDate = function(day) {
          if (scope.chekDate(day, true)) {
            return false;
          }
          scope.date.setDate(day.d.getDate());
          scope.date.setMonth(day.d.getMonth());
          scope.date.setFullYear(day.d.getFullYear());
          scope.currDate.setDate(day.d.getDate());
          scope.currDate.setMonth(day.d.getMonth());
          scope.currDate.setFullYear(day.d.getFullYear());
          scope.typeView = false;
        };
        scope.changeView = function() {
          scope.typeView = true;
        };
        scope.weeks = getWeeks();
        scope.weekdays = getDaysOfWeek();
      }
    };
  }
]);
